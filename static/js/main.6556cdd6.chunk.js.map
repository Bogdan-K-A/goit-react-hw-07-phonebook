{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactElem/ContactElem.module.css","components/ContactFilter/ContactFilter.module.css","components/container/Container.module.css","redux/filter/filter-actions.js","redux/filter/filter-reducer.js","redux/contacts/contact-actions.js","redux/contacts/contacs-reducer.js","redux/store.js","components/container/Container.js","components/ContactElem/ContactElem.js","redux/contacts/contact-operations.js","redux/selector.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","components/ContactFilter/ContactFilter.js","App.js","index.js"],"names":["module","exports","contactsFilter","createAction","filterReducer","createReducer","state","payload","fetchContactRequest","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","contactDeleteRequest","contactDeleteSuccess","contactDeleteError","contactsReducer","_","filter","id","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","rootReducer","combineReducers","contacts","store","configureStore","reducer","devTools","process","Container","children","className","s","container","ContactElem","name","number","onContactDelete","btnItem","type","onClick","axios","defaults","baseURL","dispatch","contact","post","then","data","catch","error","get","comtactId","delete","getContacts","getVisibleContacts","normalizedFilter","toLowerCase","includes","ContactList","useDispatch","visibleContacts","useSelector","map","contactItem","contactOperation","ContactForm","useState","setName","setNumber","handleChange","e","target","value","useEffect","onSubmit","preventDefault","find","alert","form","roundedInput","pattern","title","placeholder","required","onChange","btnForm","ContactFilter","filterInputBox","filterInput","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6556cdd6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__r0Zp5\",\"roundedInput\":\"ContactForm_roundedInput__2fVTS\",\"btnForm\":\"ContactForm_btnForm__Eook3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactElem_contactItem__2_Spf\",\"btnItem\":\"ContactElem_btnItem__13hAt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"ContactFilter_filterInput__3upps\",\"filterInputBox\":\"ContactFilter_filterInputBox__1T2QP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__21FG7\"};","import { createAction } from '@reduxjs/toolkit'\r\n\r\nexport const contactsFilter = createAction('contactsFilter')\r\n","import { contactsFilter } from '../filter/filter-actions'\r\nimport { createReducer } from '@reduxjs/toolkit'\r\n\r\nconst filterReducer = createReducer('', {\r\n  [contactsFilter]: (state, { payload }) => (state = payload),\r\n})\r\n\r\nexport default filterReducer\r\n","import { createAction } from '@reduxjs/toolkit'\r\n\r\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest')\r\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess')\r\nexport const fetchContactError = createAction('contacts/fetchContactError')\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest')\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess')\r\nexport const addContactError = createAction('contacts/addContactError')\r\n\r\nexport const contactDeleteRequest = createAction(\r\n  'contacts/contactDeleteRequest',\r\n)\r\nexport const contactDeleteSuccess = createAction(\r\n  'contacts/contactDeleteSuccess',\r\n)\r\nexport const contactDeleteError = createAction('contacts/contactDeleteError')\r\n","import { createReducer } from '@reduxjs/toolkit'\r\nimport {\r\n  addContactSuccess,\r\n  fetchContactSuccess,\r\n  contactDeleteSuccess,\r\n} from './contact-actions'\r\n\r\nconst contactsReducer = createReducer([], {\r\n  [fetchContactSuccess]: (_, { payload }) => payload,\r\n\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n\r\n  [contactDeleteSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n})\r\n\r\nexport default contactsReducer\r\n","import {\r\n  configureStore,\r\n  getDefaultMiddleware,\r\n  combineReducers,\r\n} from '@reduxjs/toolkit'\r\n// import logger from 'redux-logger'\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist'\r\nimport filterReducer from '../redux/filter/filter-reducer'\r\nimport contactsReducer from '../redux/contacts/contacs-reducer'\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  // logger,\r\n]\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n  filter: filterReducer,\r\n})\r\n\r\nexport const store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n})\r\n","import s from './Container.module.css'\r\n\r\nexport const Container = ({ children }) => (\r\n  <div className={s.container}>{children}</div>\r\n)\r\n","import PropTypes from 'prop-types'\r\nimport s from './ContactElem.module.css'\r\n\r\nexport const ContactElem = ({ name, number, onContactDelete }) => {\r\n  return (\r\n    <>\r\n      <p>\r\n        {name}: {number}\r\n      </p>\r\n      <button className={s.btnItem} type=\"button\" onClick={onContactDelete}>\r\n        Delete\r\n      </button>\r\n    </>\r\n  )\r\n}\r\n\r\nContactElem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onContactDelete: PropTypes.func.isRequired,\r\n}\r\n","import axios from 'axios'\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  contactDeleteRequest,\r\n  contactDeleteSuccess,\r\n  contactDeleteError,\r\n} from './contact-actions'\r\n\r\naxios.defaults.baseURL = 'https://61ec322ef3011500174d20fc.mockapi.io'\r\n\r\nconst fetchContacts = () => (dispatch) => {\r\n  dispatch(fetchContactRequest())\r\n\r\n  return axios\r\n    .get('/contacts')\r\n    .then(({ data }) => dispatch(fetchContactSuccess(data)))\r\n    .catch((error) => dispatch(fetchContactError(error)))\r\n}\r\n\r\nconst addContact = (name, number) => (dispatch) => {\r\n  const contact = {\r\n    name,\r\n    number,\r\n  }\r\n\r\n  dispatch(addContactRequest())\r\n\r\n  return axios\r\n    .post('/contacts', contact)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch((error) => dispatch(addContactError(error)))\r\n}\r\n\r\nconst contactDelete = (comtactId) => (dispatch) => {\r\n  dispatch(contactDeleteRequest())\r\n\r\n  return axios\r\n    .delete(`/contacts/${comtactId}`)\r\n    .then(() => dispatch(contactDeleteSuccess(comtactId)))\r\n    .catch((error) => dispatch(contactDeleteError(error)))\r\n}\r\n\r\nexport default {\r\n  addContact,\r\n  fetchContacts,\r\n  contactDelete,\r\n}\r\n","export const getContacts = (state) => state.contacts\r\n// export const Filter = (state) => state.filter\r\n\r\nexport const getVisibleContacts = (state) => {\r\n  const contacts = state.contacts\r\n  const filter = state.filter\r\n\r\n  const normalizedFilter = filter.toLowerCase()\r\n  return contacts.filter((contact) =>\r\n    contact.name.toLowerCase().includes(normalizedFilter),\r\n  )\r\n}\r\n","import { useDispatch, useSelector } from 'react-redux'\r\nimport { ContactElem } from '../ContactElem/ContactElem'\r\nimport s from '../ContactElem/ContactElem.module.css'\r\nimport contactOperation from '../../redux/contacts/contact-operations'\r\nimport { getVisibleContacts } from '../../redux/selector'\r\n\r\nconst ContactList = () => {\r\n  const dispatch = useDispatch()\r\n  const visibleContacts = useSelector(getVisibleContacts)\r\n  const onContactDelete = (id) => dispatch(contactOperation.contactDelete(id))\r\n\r\n  return (\r\n    <>\r\n      <ul>\r\n        {visibleContacts.map(({ id, name, number }) => (\r\n          <li className={s.contactItem} key={id}>\r\n            <ContactElem\r\n              name={name}\r\n              number={number}\r\n              onContactDelete={() => {\r\n                onContactDelete(id)\r\n              }}\r\n            />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ContactList\r\n","import { useDispatch, useSelector } from 'react-redux'\r\nimport contactOperation from '../../redux/contacts/contact-operations'\r\nimport { useState, useEffect } from 'react'\r\nimport s from './ContactForm.module.css'\r\nimport { getContacts } from '../../redux/selector'\r\n\r\nfunction ContactForm() {\r\n  const [name, setName] = useState('')\r\n  const [number, setNumber] = useState('')\r\n  const contacts = useSelector(getContacts)\r\n  const dispatch = useDispatch()\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value)\r\n        break\r\n      case 'number':\r\n        setNumber(value)\r\n        break\r\n\r\n      default:\r\n        return\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(contactOperation.fetchContacts())\r\n  }, [])\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    const reLockInput = contacts.find((contact) => contact.name === name)\r\n\r\n    if (reLockInput) {\r\n      alert('Такой контакт уже есть в списке')\r\n\r\n      return contacts\r\n    } else {\r\n      dispatch(contactOperation.addContact(name, number))\r\n      setName('')\r\n      setNumber('')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={s.form}>\r\n      <label>\r\n        {/* <p>Name</p> */}\r\n        <input\r\n          className={s.roundedInput}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          placeholder=\"Name:\"\r\n          required\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <label>\r\n        {/* <p>Number</p> */}\r\n        <input\r\n          className={s.roundedInput}\r\n          type=\"tel\"\r\n          value={number}\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          placeholder=\"Tel:\"\r\n          required\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <button type=\"submit\" className={s.btnForm}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default ContactForm\r\n","import { useDispatch } from 'react-redux'\r\nimport { contactsFilter } from '../../redux/filter/filter-actions'\r\nimport s from './ContactFilter.module.css'\r\n\r\nconst ContactFilter = () => {\r\n  const dispatch = useDispatch()\r\n  const onChange = (filter) => dispatch(contactsFilter(filter))\r\n\r\n  return (\r\n    <label className={s.filterInputBox}>\r\n      <input\r\n        className={s.filterInput}\r\n        placeholder=\"Find contacts by name\"\r\n        type=\"text\"\r\n        onChange={(e) => onChange(e.target.value)}\r\n      />\r\n    </label>\r\n  )\r\n}\r\n\r\nexport default ContactFilter\r\n","import { Container } from './components/container/Container'\r\nimport ContactList from './components/ContactList/ContactList'\r\nimport ContactForm from './components/ContactForm/ContactForm'\r\nimport ContactFilter from './components/ContactFilter/ContactFilter'\r\n\r\nfunction App() {\r\n  return (\r\n    <Container>\r\n      <h1>Phoneboock</h1>\r\n      <ContactForm />\r\n\r\n      <h2>Contacts</h2>\r\n      <ContactFilter />\r\n      <ContactList />\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { store } from './redux/store'\n// import { PersistGate } from 'redux-persist/integration/react'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={'Loading...'} persistor={persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}