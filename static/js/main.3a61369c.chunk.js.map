{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactElem/ContactElem.module.css","components/ContactFilter/ContactFilter.module.css","components/container/Container.module.css","components/Spinner/Spinner.module.css","redux/filter/filter-actions.js","redux/filter/filter-reducer.js","redux/contacts/contactsSlice.js","redux/store.js","components/container/Container.js","components/ContactForm/ContactForm.js","components/ContactElem/ContactElem.js","redux/filter/selector.js","components/ContactList/ContactList.js","components/ContactFilter/ContactFilter.js","components/Spinner/Spinner.js","App.js","index.js"],"names":["module","exports","contactsFilter","createAction","filterReducer","createReducer","state","payload","contactApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","build","fetchContacts","query","providesTags","addContact","mutation","newContact","url","method","body","name","number","invalidatesTags","deleteContact","contactId","useFetchContactsQuery","useAddContactMutation","useDeleteContactMutation","store","configureStore","reducer","middleware","getDefaultMiddleware","setupListeners","dispatch","Container","children","className","s","container","ContactForm","contacts","useState","setName","setNumber","handleChange","e","target","value","onSubmit","preventDefault","find","contact","alert","form","roundedInput","type","pattern","title","placeholder","required","onChange","btnForm","ContactElem","id","btnItem","onClick","getFilter","filter","ContactList","useSelector","visibleContacts","normalizedFilter","toLowerCase","includes","getVisibleContacts","map","contactItem","ContactFilter","useDispatch","filterInputBox","filterInput","Spinner","center","color","height","width","App","data","isFetching","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3a61369c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__r0Zp5\",\"roundedInput\":\"ContactForm_roundedInput__2fVTS\",\"btnForm\":\"ContactForm_btnForm__Eook3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactElem_contactItem__2_Spf\",\"btnItem\":\"ContactElem_btnItem__13hAt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"ContactFilter_filterInput__3upps\",\"filterInputBox\":\"ContactFilter_filterInputBox__1T2QP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__21FG7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"Spinner_center__2wPTt\"};","import { createAction } from '@reduxjs/toolkit'\r\n\r\nexport const contactsFilter = createAction('contactsFilter')\r\n","import { contactsFilter } from '../filter/filter-actions'\r\nimport { createReducer } from '@reduxjs/toolkit'\r\n\r\nexport const filterReducer = createReducer('', {\r\n  [contactsFilter]: (state, { payload }) => (state = payload),\r\n})\r\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\n\r\nexport const contactApi = createApi({\r\n  reducerPath: 'contactApi',\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: 'https://61ec322ef3011500174d20fc.mockapi.io',\r\n  }),\r\n  tagTypes: ['Contact'],\r\n  endpoints: (build) => ({\r\n    fetchContacts: build.query({\r\n      query: () => '/contacts',\r\n      providesTags: ['Contact'],\r\n    }),\r\n\r\n    addContact: build.mutation({\r\n      query: (newContact) => ({\r\n        url: '/contacts',\r\n        method: 'POST',\r\n        body: {\r\n          name: newContact.name,\r\n          number: newContact.number,\r\n        },\r\n      }),\r\n      invalidatesTags: ['Contact'],\r\n    }),\r\n\r\n    deleteContact: build.mutation({\r\n      query: (contactId) => ({\r\n        url: `contacts/${contactId}`,\r\n        method: 'DELETE',\r\n      }),\r\n      invalidatesTags: ['Contact'],\r\n    }),\r\n  }),\r\n})\r\n\r\nexport const {\r\n  useFetchContactsQuery,\r\n  useAddContactMutation,\r\n  useDeleteContactMutation,\r\n} = contactApi\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport { setupListeners } from '@reduxjs/toolkit/dist/query'\r\nimport { filterReducer } from '../redux/filter/filter-reducer'\r\nimport { contactApi } from './contacts/contactsSlice'\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    [contactApi.reducerPath]: contactApi.reducer,\r\n    filter: filterReducer,\r\n  },\r\n  middleware: (getDefaultMiddleware) => [\r\n    ...getDefaultMiddleware(),\r\n    contactApi.middleware,\r\n  ],\r\n})\r\n\r\nsetupListeners(store.dispatch)\r\n","import s from './Container.module.css'\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={s.container}>{children}</div>\r\n)\r\nexport default Container\r\n","import { useState } from 'react'\r\nimport { useAddContactMutation } from '../../redux/contacts/contactsSlice'\r\nimport s from './ContactForm.module.css'\r\n\r\nexport default function ContactForm({ contacts }) {\r\n  const [name, setName] = useState('')\r\n  const [number, setNumber] = useState('')\r\n  const [addContact] = useAddContactMutation()\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value)\r\n        break\r\n      case 'number':\r\n        setNumber(value)\r\n        break\r\n\r\n      default:\r\n        return\r\n    }\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    const reLockInput = contacts.find((contact) => contact.name === name)\r\n\r\n    if (reLockInput) {\r\n      alert('Такой контакт уже есть в списке')\r\n\r\n      return contacts\r\n    } else {\r\n      addContact({ name, number })\r\n      setName('')\r\n      setNumber('')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={s.form}>\r\n      <label>\r\n        <input\r\n          className={s.roundedInput}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          placeholder=\"Name:\"\r\n          required\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <label>\r\n        <input\r\n          className={s.roundedInput}\r\n          type=\"tel\"\r\n          value={number}\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          placeholder=\"Tel:\"\r\n          required\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <button type=\"submit\" className={s.btnForm}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  )\r\n}\r\n","import { useDeleteContactMutation } from '../../redux/contacts/contactsSlice'\r\nimport s from './ContactElem.module.css'\r\n\r\nexport const ContactElem = ({ id, name, number }) => {\r\n  const [deleteContact] = useDeleteContactMutation()\r\n  return (\r\n    <>\r\n      <p>\r\n        {name}: {number}\r\n      </p>\r\n      <button\r\n        className={s.btnItem}\r\n        type=\"button\"\r\n        onClick={() => {\r\n          deleteContact(id)\r\n        }}\r\n      >\r\n        Delete\r\n      </button>\r\n    </>\r\n  )\r\n}\r\n","export const getFilter = (state) => state.filter\r\n","import { ContactElem } from '../ContactElem/ContactElem'\r\nimport { getFilter } from '../../redux/filter/selector'\r\nimport { useSelector } from 'react-redux'\r\nimport s from '../ContactElem/ContactElem.module.css'\r\n\r\nconst ContactList = ({ contacts }) => {\r\n  const filter = useSelector(getFilter)\r\n\r\n  const getVisibleContacts = () => {\r\n    const normalizedFilter = filter.toLowerCase()\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter),\r\n    )\r\n  }\r\n\r\n  const visibleContacts = getVisibleContacts()\r\n  return (\r\n    <ul>\r\n      {visibleContacts.map((contact) => (\r\n        <li className={s.contactItem} key={contact.id}>\r\n          <ContactElem {...contact} />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default ContactList\r\n","import { useDispatch } from 'react-redux'\r\nimport { contactsFilter } from '../../redux/filter/filter-actions'\r\nimport s from './ContactFilter.module.css'\r\n\r\nconst ContactFilter = () => {\r\n  const dispatch = useDispatch()\r\n  const onChange = (filter) => dispatch(contactsFilter(filter))\r\n\r\n  return (\r\n    <label className={s.filterInputBox}>\r\n      <input\r\n        className={s.filterInput}\r\n        placeholder=\"Find contacts by name\"\r\n        type=\"text\"\r\n        onChange={(e) => onChange(e.target.value)}\r\n      />\r\n    </label>\r\n  )\r\n}\r\n\r\nexport default ContactFilter\r\n","import 'react-loader-spinner/dist/loader/css/react-spinner-loader.css'\r\nimport { TailSpin } from 'react-loader-spinner'\r\nimport s from './Spinner.module.css'\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className={s.center}>\r\n      <TailSpin color=\"#00BFFF\" height={50} width={50} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Spinner\r\n","import Container from './components/container'\r\nimport ContactForm from './components/ContactForm'\r\nimport ContactList from './components/ContactList'\r\nimport ContactFilter from './components/ContactFilter'\r\nimport Spinner from './components/Spinner'\r\nimport { useFetchContactsQuery } from './redux/contacts/contactsSlice'\r\n\r\nexport default function App() {\r\n  const { data, isFetching } = useFetchContactsQuery()\r\n\r\n  return (\r\n    <Container>\r\n      <h1>Phoneboock</h1>\r\n      <ContactForm contacts={data} />\r\n\r\n      <h2>Contacts</h2>\r\n      <ContactFilter />\r\n\r\n      {data && <ContactList contacts={data} />}\r\n      {isFetching && <Spinner />}\r\n    </Container>\r\n  )\r\n}\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { store } from './redux/store'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}